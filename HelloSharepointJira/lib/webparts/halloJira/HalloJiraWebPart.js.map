{"version":3,"sources":["webparts/halloJira/HalloJiraWebPart.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,8DAAqD;AACrD,8DAIoC;AACpC,gEAAqD;AAErD,+EAAoD;AACpD,iDAAmD;AACnD,iDAAwC;AAMxC;IAA8C,oCAA6C;IAA3F;;IA4EA,CAAC;IA1EQ,iCAAM,GAAb;QACE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,0BACX,sCAAM,CAAC,SAAS,kCACd,sCAAM,CAAC,SAAS,oCACd,sCAAM,CAAC,GAAG,sCACR,sCAAM,CAAC,MAAM,yCACV,sCAAM,CAAC,KAAK,mEACf,sCAAM,CAAC,QAAQ,2FACf,sCAAM,CAAC,WAAW,WAAM,yBAAM,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,uCAC3D,sCAAM,CAAC,WAAW,WAAM,yBAAM,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,oEACxB,sCAAM,CAAC,MAAM,2CACnC,sCAAM,CAAC,KAAK,iHAK/B,CAAC;IACZ,CAAC;IAES,uCAAY,GAAtB;QACE,IAAI,eAAe,GAAW,EAAE,CAAC;QACjC,IAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI;YAC5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,eAAe,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,cAAc,GAAG,eAAe,CAAC;IAC1C,CAAC;IAEe,uCAAY,GAA5B;;;;;4BACgB,qBAAM,IAAI,CAAC,YAAY,EAAE,EAAA;;gCAAzB,SAAyB;wBACvC,sBAAO,KAAK,EAAC;;;;KACd;IAES,uCAAY,GAAtB;QACE,IAAI,IAAI,GAAG,IAAI,wBAAU,CAAC;YACxB,IAAI,EAAE,wBAAwB;YAC9B,UAAU,EAAE;gBACV,MAAM,EAAE,sBAAsB;aAC/B;SACF,CAAC,CAAC;QAEH,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;QAC1D,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QACnC,gBAAgB;QAChB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,OAAO,CAAC,KAAK,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sBAAc,yCAAW;aAAzB;YACE,MAAM,CAAC,yBAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC;;;OAAA;IAES,uDAA4B,GAAtC;QACE,MAAM,CAAC;YACL,KAAK,EAAE;gBACL;oBACE,MAAM,EAAE;wBACN,WAAW,EAAE,OAAO,CAAC,uBAAuB;qBAC7C;oBACD,MAAM,EAAE;wBACN;4BACE,SAAS,EAAE,OAAO,CAAC,cAAc;4BACjC,WAAW,EAAE;gCACX,uCAAqB,CAAC,aAAa,EAAE;oCACnC,KAAK,EAAE,OAAO,CAAC,qBAAqB;iCACrC,CAAC;6BACH;yBACF;qBACF;iBACF;aACF;SACF,CAAC;IACJ,CAAC;IACH,uBAAC;AAAD,CA5EA,AA4EC,CA5E6C,uCAAqB,GA4ElE","file":"webparts/halloJira/HalloJiraWebPart.js","sourcesContent":["import { Version } from '@microsoft/sp-core-library';\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneConfiguration,\r\n  PropertyPaneTextField\r\n} from '@microsoft/sp-webpart-base';\r\nimport { escape } from '@microsoft/sp-lodash-subset';\r\n\r\nimport styles from './HalloJiraWebPart.module.scss';\r\nimport * as strings from 'HalloJiraWebPartStrings';\r\nimport JiraClient from 'jira-connector';\r\n\r\nexport interface IHalloJiraWebPartProps {\r\n  description: string;\r\n}\r\n\r\nexport default class HalloJiraWebPart extends BaseClientSideWebPart<IHalloJiraWebPartProps> {\r\n\r\n  public render(): void {\r\n    this.domElement.innerHTML = `\r\n      <div class=\"${ styles.halloJira }\">\r\n        <div class=\"${ styles.container }\">\r\n          <div class=\"${ styles.row }\">\r\n            <div class=\"${ styles.column }\">\r\n              <span class=\"${ styles.title }\">Welcome to SharePoint!</span>\r\n              <p class=\"${ styles.subTitle }\">Customize SharePoint experiences using Web Parts.</p>\r\n              <p class=\"${ styles.description }\">${escape(this.properties.description)}</p>\r\n              <p class=\"${ styles.description }\">${escape(this.strJiraIssue())}</p>\r\n              <a href=\"https://aka.ms/spfx\" class=\"${ styles.button }\">\r\n                <span class=\"${ styles.label }\">Learn more</span>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  protected strJiraIssue(): string {\r\n    let jiraIssueString: string = '';\r\n    this.gibJiraIssue().then((data) => {\r\n      console.log(data);\r\n      jiraIssueString = data;\r\n    });\r\n    return 'Jira Issue: ' + jiraIssueString;\r\n  }\r\n\r\n  protected async gibJiraIssue(): Promise<string> {\r\n    const value = await this.getJiraIssue();\r\n    return value;\r\n  }\r\n\r\n  protected getJiraIssue(): Promise<string> {\r\n    let jira = new JiraClient({\r\n      host: 'https://jira.rt.sv.loc',\r\n      basic_auth: {\r\n        base64: 'aXVseGE6TWF2aWMxMyE='\r\n      }\r\n    });\r\n\r\n    const issue = jira.issue.getIssue({ issueKey: 'JWR-19' });\r\n    console.log('Jira issue: ', issue);\r\n    // return issue;\r\n    return new Promise((resolve, reject) => {\r\n      resolve(issue);\r\n    });\r\n  }\r\n\r\n  protected get dataVersion(): Version {\r\n    return Version.parse('1.0');\r\n  }\r\n\r\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n    return {\r\n      pages: [\r\n        {\r\n          header: {\r\n            description: strings.PropertyPaneDescription\r\n          },\r\n          groups: [\r\n            {\r\n              groupName: strings.BasicGroupName,\r\n              groupFields: [\r\n                PropertyPaneTextField('description', {\r\n                  label: strings.DescriptionFieldLabel\r\n                })\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}